buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}


apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://s3.amazonaws.com/repo.commonsware.com"
    }
}

apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 27
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "co.hypersecure"
        minSdkVersion 21
        targetSdkVersion 22
        versionCode 10
        versionName "1.0.6"
        lintOptions {
            disable "ResourceType"

        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' // use the jni .so compiled from the manual ndk-build command
        jni.srcDirs = [] //disable automatic ndk-build call
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile('co.hyperverge:hypersecuresdk:1.1.5.21-SNAPSHOT@aar', {
        transitive=true
    })
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.2.1'
    compile 'com.google.android.gms:play-services-gcm:11.6.2'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:27.0.2'
    compile 'com.github.bumptech.glide:glide:4.2.0'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.mixpanel.android:mixpanel-android:4.6.2'
    compile 'com.github.awanishraj.aspect-ratio-recycler:aspectratiorecycler:0.1.0'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.facebook.android:facebook-android-sdk:4.29.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
//def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.getNdkFolder()

task ndkBuild(type: Exec) {
    commandLine ndkDir + '/ndk-build', '-C', file('src/main/jni').absolutePath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

clean.dependsOn 'cleanNative'
task cleanNative(type: Exec) {
    commandLine ndkDir + '/ndk-build', 'clean', '-C', file('src/main/jni').absolutePath
}